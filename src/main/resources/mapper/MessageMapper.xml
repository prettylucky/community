<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.better.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversationCountByUserId" resultType="int">
        select count(distinct conversation_id)
        from message
        where (from_id = #{userId} or to_id = #{userId}) and status != 2 and from_id != 1
    </select>

    <select id="selectLastMessageByUserId" resultType="message">
        select <include refid="selectFields"/> from message where id in (
            select max(id)
            from message
            where (from_id = #{userId} or to_id = #{userId}) and status != 2 and from_id != 1
            group by conversation_id
            )
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <select id="selectUnreadCount" resultType="int">
        select count(id)
        from message
        where to_id = #{userId} and status = 0 and from_id != 1
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectMessageCountByConversationId" resultType="int">
        select count(id)
        from message
        where conversation_id = #{conversationId}
        and from_id != 1
        and status != 2
    </select>

    <select id="selectMessagesByConversationId" resultType="message">
        select <include refid="selectFields"/>
        from message
        where conversation_id = #{conversationId}
        and from_id != 1
        and status != 2
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message
        where from_id = 1 and to_id = #{userId} and status = 0
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(id) from message
        where from_id = 1 and to_id = #{userId} and conversation_id = #{conversationId} and status != 2
    </select>

    <select id="selectLastNotice" resultType="message">
        select <include refid="selectFields"/> from message where id = (
        select max(id) from message
        where from_id = 1 and to_id = #{userId}
          and conversation_id = #{conversationId} and status != 2)
    </select>

    <select id="selectNotices" resultType="message">
        select <include refid="selectFields"/> from message
        where from_id = 1
        and to_id = #{userId}
        and conversation_id = #{conversationId}
        and status != 2
        order by id desc
        limit #{offset},#{limit}
    </select>

    <insert id="insertMessage" parameterType="message" keyProperty="id" useGeneratedKeys="true">
        insert into message(<include refid="insertFields"/>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>


    <update id="updateMessageStatus">
        update message set status = #{status} where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

</mapper>